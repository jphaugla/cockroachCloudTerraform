# Pick the IP we should target for readiness checks
- name: Set target host for checks
  set_fact:
    kafka_host: "{{ kafka_internal_ip | default(ansible_default_ipv4.address) }}"

# Define your services in the order you want them started
- name: Define services (order matters)
  set_fact:
    services:
      - { name: confluent-zookeeper,       port: 2181 }
      - { name: confluent-server,          port: 9092 }
      - { name: confluent-schema-registry, port: 8081, check_url: "http://{{ kafka_host }}:8081/subjects" }
      - { name: confluent-kafka-connect,   port: 8083, check_url: "http://{{ kafka_host }}:8083/v1/metadata/id" }
      - { name: confluent-kafka-rest,      port: 8082, check_url: "http://{{ kafka_host }}:8082/topics" }
      - { name: confluent-ksqldb,          port: 8088, check_url: "http://{{ kafka_host }}:8088/info" }
      - { name: confluent-control-center,  port: 9021, check_url: "http://{{ kafka_host }}:9021" }

# (Optional but recommended) auto-restart on crashes
- name: Ensure systemd drop-in dirs exist
  file:
    path: "/etc/systemd/system/{{ item.name }}.d"
    state: directory
    mode: "0755"
  loop: "{{ services }}"

- name: Install Restart=on-failure drop-in
  copy:
    dest: "/etc/systemd/system/{{ item.name }}.d/restart.conf"
    content: |
      [Service]
      Restart=on-failure
      RestartSec=5s
      StartLimitBurst=10
      StartLimitIntervalSec=0
  loop: "{{ services }}"
  register: dropin_copies

- name: Reload systemd if any drop-in changed
  ansible.builtin.systemd:
    daemon_reload: yes
  when: dropin_copies is changed

# Enable all services to start on boot
- name: Enable services on boot
  ansible.builtin.systemd:
    name: "{{ item.name }}"
    enabled: yes
  loop: "{{ services }}"

# ðŸ‘‡ THIS is the include you asked about â€” it lives here in confluent-start.yml
- name: Start or restart and wait (per service)
  include_tasks: start_or_restart.yml
  loop: "{{ services }}"
  loop_control:
    loop_var: svc
    label: "{{ svc.name }}"
